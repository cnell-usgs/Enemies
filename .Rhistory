datPre <- Pre.all
View(datPre)
datPre$Residual<-ifelse(is.na(datPre$Residual),datPre$Message_Type,datPre$Residual)
datPre <- Pre.all
within(datPre,Residual[is.na(Residual)]<-Message_Type[is.na(Residual)])
within(datPre,Residual[is.na(Residual)]<-Message_Type[is.na(Residual)])
datPre$Residual[is.na(datPre$Residual)]<-datPre$Message_Type[is.na(datPre$Residual)]
datPre <- Pre.all
datPre$Residual<-as.character(datPre$Residual)
datPre$Residual[is.na(datPre$Residual)]<-datPre$Message_Type[is.na(datPre$Residual)]
datPre <- Pre.all
datPre <- Pre.all
View(datPre)
datPre$Residual<-as.character(datPre$Residual)
datPre$Residual[is.na(datPre$Residual)]<-datPre$Message_Type[is.na(datPre$Residual)]
datPre <- Pre.all
datPre <- Pre.all
View(datPre)
str(datPre)
datPre$Message_Type<-as.character(datPre$Message_Type)
datPre$Residual<-as.character(datPre$Residual)
datPre$Residual[is.na(datPre$Residual)]<-datPre$Message_Type[is.na(datPre$Residual)]
datPre$LC<-as.character(datPre$LC)
datPre$LC[is.na(datPre$LC)]<-datPre$Message_Type[is.na(datPre$LC)]
na.strings=c(""," ","NA")
?read.csv
datPre$LC<-sub("^&","NA",datPre$LC)
na.strings=c("","  ","NA")
tag37616 <-read.csv("/Users/colleennell/Documents/R/suz/pre/37616.csv",na.strings = "NA")
tag37623 <-read.csv("/Users/colleennell/Documents/R/suz/pre/37623.csv",na.strings = "NA")
tag44366 <-read.csv("/Users/colleennell/Documents/R/suz/pre/44366.csv",na.strings = "NA")
tag52674 <-read.csv("/Users/colleennell/Documents/R/suz/pre/52674.csv",na.strings = "NA")
tag52675 <-read.csv("/Users/colleennell/Documents/R/suz/pre/52675.csv",na.strings = "NA")
tag78500 <-read.csv("/Users/colleennell/Documents/R/suz/pre/78500.csv",na.strings = "NA")
tag79786 <-read.csv("/Users/colleennell/Documents/R/suz/pre/79786.csv",na.strings = "NA")
nums2<-c("1","2","3")
#filters each Argos tag for nums (LC 1,2,3) and GPS, which eliminates Argos A,B,Z,0
## | represents or
tag37616_locfilter<-filter(tag37616, LC == nums2[1] |
LC == nums2[2] |
LC == nums2[3] | Message_Type=="GPS")
tag37623_locfilter<-filter(tag37623, LC == nums2[1] |
LC == nums2[2] |
LC == nums2[3] | Message_Type=="GPS") #warning
tag44366_locfilter<-filter(tag44366, LC == nums2[1] |
LC == nums2[2] |
LC == nums2[3] | Message_Type=="GPS") #warning
tag52674_locfilter<-filter(tag52674, LC == nums2[1] |
LC == nums2[2] |
LC == nums2[3] | Message_Type=="GPS")
tag52675_locfilter<-filter(tag52675, LC == nums2[1] |
LC == nums2[2] |
LC == nums2[3] | Message_Type=="GPS")
tag78500_locfilter<-filter(tag78500, LC == nums2[1] |
LC == nums2[2] |
LC == nums2[3] | Message_Type=="GPS")
tag79786_locfilter<-filter(tag79786, LC == nums2[1] |
LC == nums2[2] |
LC == nums2[3] | Message_Type=="GPS")
Pre.all <- rbind(tag37616_locfilter,
tag37623_locfilter,
tag44366_locfilter,
tag52674_locfilter,
tag52675_locfilter,
tag78500_locfilter,
tag79786_locfilter)
datPre <- Pre.all
View(datPre)
datPre$LC<-as.numeric(datPre$LC)
datPre <- Pre.all
str(datPre)
datPre$LC
str(datPre$LC)
str(datPre$LC)
levels(datPre$LC)
datPre$LC[datPre$LC==c("","A","B","Z")]<-"NA"
levels(datPre$LC)[levels(datPre$LC) %in% c("","A","B","Z")]<-"NA"
levels(datPre$LC)[levels(datPre$LC) %in% c("","A","B","Z")]<-NA
View(datPre)
datPre <- Pre.all
levels(datPre$LC)[levels(datPre$LC) %in% c("","A","B","Z")]<-NA
datPre$LC<-as.numeric(datPre$LC)
datPre$LC<-as.character(datPre$LC)
datPre$LC[is.na(datPre$LC)]<-datPre$Message_Type[is.na(datPre$LC)]
datPre <- Pre.all
str(datPre)
str(datPre$LC)
levels(datPre$LC)
levels(datPre$LC)[levels(datPre$LC) %in% c("","A","B","Z")]<-NA
datPre$Message_Type<-as.character(datPre$Message_Type)
datPre$Residual<-as.character(datPre$Residual)
datPre$LC<-as.character(datPre$LC)
datPre$Residual[is.na(datPre$Residual)]<-datPre$Message_Type[is.na(datPre$Residual)]
datPre$LC[is.na(datPre$LC)]<-datPre$Message_Type[is.na(datPre$LC)]
library(ggplot2)
library(grid)
b = c(1,2,3,6,7,5,4,3,2,3,4,6,8,9,9,8,9,11,12)
c = c(2,3,2,4,4,6,8,7,5,4,3,5,9,9,8,8,10,11,15)
df = data.frame(b, c)
ggplot(df, aes(x=b, y= c)) +
geom_point() +
geom_segment(aes(xend=c(tail(b, n=-1), NA), yend=c(tail(c, n=-1), NA)),
arrow=arrow(length=unit(0.4,"cm"), type = "closed"))
ggplot(df, aes(x=b, y= c)) +
geom_point() +
geom_segment(aes(xend=c(tail(b, n=-1), NA), yend=c(tail(c, n=-1), NA)))
k<-figure(title = "UADY Forest Diversity Plots", tools=c("hover","save"),
ylim= as.character(c(1:7)), xlim=as.character(1:14),
xgrid=F,ygrid=F,xlab="",ylab="",
height=445,width=700,logo=NULL,outline_line_color="white")%>%
# plot rectangles
ly_crect(col, row, data = plot, 0.9, 0.9,color=plot$Diversity,
fill_alpha = 0.6,
hover = c(Diversity,Species),legend="Diversity") %>%
# add symbol text
ly_text(col, row, text = Plot, data = plot,
font_style = "bold", font_size = "10pt",
align = "center", baseline = "center")
k
library(dplyr)
library(ggplot2)
ids<-read.csv("/Users/colleennell/Documents/R/CAWR/data/CAWR_OTU_tree.csv")
samples<-read.csv("/Users/colleennell/Documents/R/CAWR/data/CAWR_samples.csv")
ids$ID<-as.character(ids$ID)
ids$OTU<-unique(rapply(strsplit(ids$ID,' '), function(x) head(x, 1)))
ids$OTU<-gsub('>','',ids$OTU)
samples<-left_join(samples, ids[,c("OTU","Taxa.ID","Taxa.Order","Taxa.Family")], by="OTU")
View(samples)
samples<-samples[,-"Totals"]
samples<-samples[,-c("Totals")]
drops<-c("Totals")
samples[,!(names(samples)%in% drops)]##remove col
samples<-samples[,!(names(samples)%in% drops)]##remove col
blast<-read.csv("/Users/colleennell/Documents/R/CAWR/data/CAWR_OTU_tree_june16.csv")
View(blast)
?match
blast$idres<-match(blast$Taxa.ID,blast$ORDER)
blast$idres<-match(blast$Taxa.ID,c(blast$ORDER,blast$FAMILY,blast$GENUS,blast$SPECIES))
library(reshape2)
blast$reso<-ifelse(blast$Taxa.ID == blast$SPECIES,"species",
ifelse(blast$Taxa.ID == blast$GENUS,"genus",
ifelse(blast$Taxa.ID==blast$FAMILY,"family",
ifelse(blast$Taxa.ID==blast$ORDER,"order",NA
))))
str(blast)
blast$Taxa.ID<-as.character(blast$Taxa.ID)
blast$ORDER<-as.character(blast$ORDER)
blast$FAMILY<-as.character(blast$FAMILY)
blast$GENUS<-as.character(blast$GENUS)
blast$SPECIES<-as.character(blast$SPECIES)
blast$reso<-ifelse(blast$Taxa.ID == blast$SPECIES,"species",
ifelse(blast$Taxa.ID == blast$GENUS,"genus",
ifelse(blast$Taxa.ID==blast$FAMILY,"family",
ifelse(blast$Taxa.ID==blast$ORDER,"order",NA
))))
??filter
check<-blast[,c("Taxa.ID","reso","Taxa.Family","Taxa.Order","ORDER","FAMILY","GENUS","SPECIES")]
View(check)
rm(list=ls())
library(dplyr)
library(ggplot2)
library(reshape2)
ids<-read.csv("/Users/colleennell/Documents/R/CAWR/data/CAWR_OTU_tree.csv")
samples<-read.csv("/Users/colleennell/Documents/R/CAWR/data/CAWR_samples.csv")
blast<-read.csv("/Users/colleennell/Documents/R/CAWR/data/CAWR_OTU_tree_june16.csv")
blast$idres<-match(blast$Taxa.ID,blast$ORDER)##this returns a variable with '10' indicating a match and NA where not
str(blast)##can only compare factors if have same levels..make all character?
blast$Taxa.ID<-as.character(blast$Taxa.ID)
blast$ORDER<-as.character(blast$ORDER)
blast$FAMILY<-as.character(blast$FAMILY)
blast$GENUS<-as.character(blast$GENUS)
blast$SPECIES<-as.character(blast$SPECIES)
blast$reso<-ifelse(blast$Taxa.ID == blast$SPECIES,"species",
ifelse(blast$Taxa.ID == blast$GENUS,"genus",
ifelse(blast$Taxa.ID==blast$FAMILY,"family",
ifelse(blast$Taxa.ID==blast$ORDER,"order",NA
))))
check<-blast[,c("Taxa.ID","reso","Taxa.Family","Taxa.Order","ORDER","FAMILY","GENUS","SPECIES")]
View(check)
check<-blast[,c("OTU","Taxa.ID","reso","Taxa.Family","Taxa.Order","ORDER","FAMILY","GENUS","SPECIES")]
blast$reso<-ifelse(blast$Taxa.ID == blast$SPECIES,"species",
ifelse(blast$Taxa.ID == blast$GENUS,"genus",
ifelse(blast$Taxa.ID==blast$FAMILY,"family",
ifelse(blast$Taxa.ID==blast$ORDER,"order",
ifelse(blast$Taxa.ID=="unknown","none",NA
))))
check<-blast[,c("OTU","Taxa.ID","reso","Taxa.Family","Taxa.Order","ORDER","FAMILY","GENUS","SPECIES")]
blast$reso<-ifelse(blast$Taxa.ID == blast$SPECIES,"species",
ifelse(blast$Taxa.ID == blast$GENUS,"genus",
ifelse(blast$Taxa.ID==blast$FAMILY,"family",
ifelse(blast$Taxa.ID==blast$ORDER,"order",
ifelse(blast$Taxa.ID=="unknown","none",NA
)))))
check<-blast[,c("OTU","Taxa.ID","reso","Taxa.Family","Taxa.Order","ORDER","FAMILY","GENUS","SPECIES")]
library(dplyr)
library(ggplot2)
library(reshape2)
ids<-read.csv("/Users/colleennell/Documents/R/CAWR/data/CAWR_OTU_tree.csv")
samples<-read.csv("/Users/colleennell/Documents/R/CAWR/data/CAWR_samples.csv")
blast<-read.csv("/Users/colleennell/Documents/R/CAWR/data/CAWR_OTU_tree_june16.csv")
blast$idres<-match(blast$Taxa.ID,blast$ORDER)##this returns a variable with '10' indicating a match and NA where not
str(blast)##can only compare factors if have same levels..make all character?
blast$Taxa.ID<-as.character(blast$Taxa.ID)
blast$ORDER<-as.character(blast$ORDER)
blast$FAMILY<-as.character(blast$FAMILY)
blast$GENUS<-as.character(blast$GENUS)
blast$SPECIES<-as.character(blast$SPECIES)
blast$reso<-ifelse(blast$Taxa.ID == blast$SPECIES,"species",
ifelse(blast$Taxa.ID == blast$GENUS,"genus",
ifelse(blast$Taxa.ID==blast$FAMILY,"family",
ifelse(blast$Taxa.ID==blast$ORDER,"order",
ifelse(blast$Taxa.ID=="unknown","none",NA
)))))
##manually double check that these are right...what does it do for the unknowns?
check<-blast[,c("OTU","Taxa.ID","reso","Taxa.Family","Taxa.Order","ORDER","FAMILY","GENUS","SPECIES")]
View(check)
blast$reso<-ifelse(blast$Taxa.ID == blast$SPECIES,"species",
ifelse(blast$Taxa.ID == blast$GENUS,"genus",
ifelse(blast$Taxa.ID==blast$FAMILY,"family",
ifelse(blast$Taxa.ID==blast$ORDER,"order",
ifelse(blast$Taxa.ID=="unknown","none",
ifelse(blast$Taxa.ID==blast$Taxa.Order,"order",
ifelse(blast$Taxa.ID==blast$Taxa.Family,"family",NA
)))))))
check<-blast[,c("OTU","Taxa.ID","reso","Taxa.Family","Taxa.Order","ORDER","FAMILY","GENUS","SPECIES")]
match<-blast[,c("Taxa.ID","reso")]
match<-match%>%##lets see the matches between ID and their taxonomic resolution
group_by(Taxa.ID,reso)
View(match)
match<-match%>%##lets see the matches between ID and their taxonomic resolution
group_by(Taxa.ID)%>%
summarize(level=reso)
blast<-read.csv("/Users/colleennell/Documents/R/CAWR/data/CAWR_OTU_tree_june16.csv")
blast$Taxa.ID<-as.character(blast$Taxa.ID)
blast$ORDER<-as.character(blast$ORDER)
blast$FAMILY<-as.character(blast$FAMILY)
blast$GENUS<-as.character(blast$GENUS)
blast$SPECIES<-as.character(blast$SPECIES)
blast$reso<-ifelse(blast$Taxa.ID == blast$SPECIES,"species",
ifelse(blast$Taxa.ID == blast$GENUS,"genus",
ifelse(blast$Taxa.ID==blast$FAMILY,"family",
ifelse(blast$Taxa.ID==blast$ORDER,"order",
ifelse(blast$Taxa.ID=="unknown","none",
ifelse(blast$Taxa.ID==blast$Taxa.Order,"order",
ifelse(blast$Taxa.ID==blast$Taxa.Family,"family",NA
)))))))
check<-blast[,c("OTU","Taxa.ID","reso","Taxa.Family","Taxa.Order","ORDER","FAMILY","GENUS","SPECIES")]
View(check)
blast<-read.csv("/Users/colleennell/Documents/R/CAWR/data/CAWR_OTU_tree_june16.csv")
#blast$idres<-match(blast$Taxa.ID,blast$ORDER)##this returns a variable with '10' indicating a match and NA where not
str(blast)##can only compare factors if have same levels..make all character?
blast$Taxa.ID<-as.character(blast$Taxa.ID)
blast$ORDER<-as.character(blast$ORDER)
blast$FAMILY<-as.character(blast$FAMILY)
blast$GENUS<-as.character(blast$GENUS)
blast$SPECIES<-as.character(blast$SPECIES)
blast$reso<-ifelse(blast$Taxa.ID == blast$SPECIES,"species",
ifelse(blast$Taxa.ID == blast$GENUS,"genus",
ifelse(blast$Taxa.ID==blast$FAMILY,"family",
ifelse(blast$Taxa.ID==blast$ORDER,"order",
ifelse(blast$Taxa.ID=="unknown","none",
ifelse(blast$Taxa.ID==blast$Taxa.Order,"order",
ifelse(blast$Taxa.ID==blast$Taxa.Family,"family",NA
)))))))
##manually double check that these are right...what does it do for the unknowns?
check<-blast[,c("OTU","Taxa.ID","reso","Taxa.Family","Taxa.Order","ORDER","FAMILY","GENUS","SPECIES")]
View(check)
blast$Taxa.ID.98<-ifelse(blast$Similarity.BOLD>=98.0,blast$Taxa.ID,"none")
View(blast)
blast$Taxa.ID.98<-ifelse(blast$Similarity.BOLD>=97.8,blast$Taxa.ID,
ifelse(blast$Sequence.identity....>=97.8,blast$Taxa.ID,"none"))
write.csv(blast,"CAWR_simtest.csv")
blast$Taxa.ID.98<-ifelse(blast$Similarity.BOLD>=97.8 | blast$Sequence.identity....>=97.8,blast$Taxa.ID,"none")
View(blast)##not sure why NA's are appearing
blast$Taxa.ID.98<-ifelse(blast$Similarity.BOLD>=97.8 || blast$Sequence.identity....>=97.8,blast$Taxa.ID,"none")
View(blast)##not sure why NA's are appearing
blast$Taxa.ID.98<-ifelse(blast$Similarity.BOLD>=97.8 | blast$Sequence.identity....>=97.8,blast$Taxa.ID,"none")
last$Taxa.ID.98<-ifelse(blast$Similarity.BOLD>=97.8 | blast$Sequence.identity....>=97.8,blast$Taxa.ID,
ifelse(blast$Similarity.BOLD=="NA" & blast$Sequence.identity....>=97.8,blast$Taxa.ID,"none")
View(blast)
blast$Taxa.ID.98<-ifelse(blast$Similarity.BOLD>=97.8 | blast$Sequence.identity....>=97.8,blast$Taxa.ID,
ifelse(blast$Similarity.BOLD=="NA" & blast$Sequence.identity....>=97.8,blast$Taxa.ID,"none"))
View(blast)
blast$Taxa.ID.98<-ifelse(blast$Similarity.BOLD>=97.8 | blast$Sequence.identity....>=97.8,blast$Taxa.ID,
ifelse(blast$Similarity.BOLD=="NA" & blast$Sequence.identity....>=97.8,blast$Taxa.ID,
ifelse(blast$Similarity.BOLD=="NA" | blast$Sequence.identity....=="NA","none", "none"))
View(blast)#
blast$Taxa.ID.98<-ifelse(blast$Similarity.BOLD>=97.8 | blast$Sequence.identity....>=97.8,blast$Taxa.ID,
ifelse(blast$Similarity.BOLD=="NA" & blast$Sequence.identity....>=97.8,blast$Taxa.ID,
ifelse(blast$Similarity.BOLD=="NA" | blast$Sequence.identity....=="NA","none", "none")))
View(blast)
blast$Taxa.ID.98<-ifelse(blast$Similarity.BOLD>=97.8 | blast$Sequence.identity....>=97.8,blast$Taxa.ID,
ifelse(blast$Similarity.BOLD==NA & blast$Sequence.identity....>=97.8,blast$Taxa.ID,
ifelse(blast$Similarity.BOLD==NA | blast$Sequence.identity....==NA,"none", "none")))
View(blast)
getwd()
write.csv(blast,"/Users/colleennell/Documents/R/CAWR/CAWR_OTU_finalids.csv")
ids<-read.csv("/Users/colleennell/Documents/R/CAWR/CAWR_OTU_finalids.csv")
samples<-read.csv("/Users/colleennell/Documents/R/CAWR/data/CAWR_samples.csv")
ids$ID<-as.character(ids$ID)
ids$OTU<-unique(rapply(strsplit(ids$ID,' '), function(x) head(x, 1)))
View(ids)
View(samples)
samples<-read.csv("/Users/colleennell/Documents/R/CAWR/data/CAWR_samples.csv")
?gsub
ids$denovo<-gsub('OTU','denovo',ids$OTU)
??left_join
samples<-left_join(samples, ids[,c("OTU","Taxa.ID","Taxa.Order","Taxa.Family")], by=c("OTU"="denovo"))
samples<-left_join(samples, ids[,c("denovo","Taxa.ID","Taxa.Order","Taxa.Family")], by=c("OTU"="denovo"))
View(samples)
ids<-read.csv("/Users/colleennell/Documents/R/CAWR/CAWR_OTU_finalids.csv")###this is including bad matches 'unknown' ids
samples<-read.csv("/Users/colleennell/Documents/R/CAWR/data/CAWR_samples.csv")
ids$ID<-as.character(ids$ID)
ids$denovo<-gsub('OTU','denovo',ids$OTU)
samples<-left_join(samples, ids[,c("denovo","Taxa.ID","Taxa.Order","Taxa.Family","reso","Taxa.ID.98")], by=c("OTU"="denovo"))
View(samples)
drops<-c("Totals")
samples<-samples[,!(names(samples)%in% drops)]##remove col
samples$total_samples<-sum(samples[,c("S03":"S63")])
?sum
colnames(samples)
guts<-colnames(samples)
gut
guts
guts<-colnames(samples)
?select
guts<-select(samples,starts_with("S"))
str(guts)
taxa<-select(samples,starts_with("Taxa."))
str(taxa)
taxa<-c(samples$OTU,samples$reso,select(samples,starts_with("Taxa.")))
str(taxa)
taxa<-select(samples,starts_with("Taxa."))
str(taxa)
samples$total_samples<-sum(guts,na.rm=T)
samples$total_samples<-rowSums(guts,na.rm=T)
samples$total_abun<-rowSums(guts,na.rm=T)
samples$total_samples<-rowSums(guts>0)
getwd()
write.csv(samples,"/Users/colleennell/Documents/R/CAWR_sample_ids.csv")
ids$Taxa.Genus<-ifelse(ids$reso=="genus",ids$Taxa.ID,
ifelse(ids$reso=="species",ids$GENUS,
ifelse(ids$reso=="order" | "family",NA,NA )))
ids$Taxa.Genus<-ifelse(ids$reso=="genus",ids$Taxa.ID,
ifelse(ids$reso=="species",ids$GENUS,NA ))
str(ids)
ids$Taxa.Genus<-as.character(ifelse(ids$reso=="genus",ids$Taxa.ID,
ifelse(ids$reso=="species",ids$GENUS,NA )))
ids$Taxa.Genus<-as.factor(ifelse(ids$reso=="genus",ids$Taxa.ID,
ifelse(ids$reso=="species",ids$GENUS,NA )))
ids$Taxa.Genus<-as.factor(ifelse(ids$reso=='genus',ids$Taxa.ID,
ifelse(ids$reso=='species',ids$GENUS,NA )))
ids$Taxa.Genus<-as.factor(ifelse(ids$reso=='genus',paste(ids$Taxa.ID),
ifelse(ids$reso=='species',ids$GENUS,NA )))
ids$Taxa.Genus<-as.factor(ifelse(ids$reso=='genus',paste(ids$Taxa.ID),
ifelse(ids$reso=='species',paste(ids$GENUS,NA ))))
ids$Taxa.Genus<-as.factor(ifelse(ids$reso=='genus',paste(ids$Taxa.ID),
ifelse(ids$reso=='species',paste(ids$GENUS),NA )))
ids$Taxa.Sp<-as.factor(ifelse(ids$reso=='species',paste(ids$GENUS),NA ))
ids$Taxa.Sp<-as.factor(ifelse(ids$reso=='species',paste(ids$Taxa.ID),NA ))
id.table<-ids%>%
group_by(Taxa.Order,Taxa.Family,Taxa.Genus,Taxa.Sp)%>%
summarize(n_OTU = count(Taxa.ID))
id.table<-ids%>%
group_by(Taxa.Order,Taxa.Family,Taxa.Genus,Taxa.Sp)
View(id.table)
id.table<-ids%>%
group_by(Taxa.ID)
View(id.table)
id.table<-ids%>%
group_by(Taxa.ID)%>%
summarize(n_otu=length(OTU))
View(id.table)
id.table<-ids%>%
group_by(Taxa.ID,Taxa.Order,Taxa.Family,Taxa.Genus,Taxa.Sp)%>%
summarize(n_otu=length(OTU))
View(id.table)
ids$Taxa.Family<-ifelse(ids$Taxa.Family=='unknown',NA,paste(ids$Taxa.Family))
id.table<-ids%>%
group_by(Taxa.ID,Taxa.Order,Taxa.Family,Taxa.Genus,Taxa.Sp)%>%
summarize(n_otu=length(OTU))
View(id.table)
ids$Taxa.Family<-ifelse(ids$Taxa.Family=='unknown'| ids$Taxa.Family=='None',NA,paste(ids$Taxa.Family))
id.table<-ids%>%
group_by(Taxa.ID,Taxa.Order,Taxa.Family,Taxa.Genus,Taxa.Sp)%>%
summarize(n_otu=length(OTU))
View(id.table)
?hwriter
??hwriter
install.packages("pander")
install.packages("rmarkdown", type = "source")
install.packages("rmarkdown", type = "source")
install.packages("rmarkdown", type = "source")
install.packages("rmarkdown", type = "source")
??kable
update.packages("DT")
library(devtools)
devtools::install_github('rstudio/DT')
update.packages("plotly")
guts<-read.csv("/Users/colleennell/Documents/R/CAWR_sample_ids.csv")##this is the above 2 combined with a few more cols
View(guts)
sample.matrix<-select(guts,starts_with("S"))
histy<-guts%>%
group_by(Taxa.Order)%>%
summarize(abun_sample=sum(total_abun))
library(dplyr)
histy<-guts%>%
group_by(Taxa.Order)%>%
summarize(abun_sample=sum(total_abun))
View(histy)
histy<-guts%>%
group_by(Taxa.Order,Taxa.Family)%>%
summarize(abun_sample=sum(total_abun))
View(histy)
birds<-read.csv("enemy_bird_visit.csv")
drops<-c("Grand.Total","X.blank.")##clean up df
birds=birds[,!(names(birds) %in% drops)]
setwd("/Users/colleennell/Documents/R/enemies")
birds<-read.csv("enemy_bird_visit.csv")
drops<-c("Grand.Total","X.blank.")##clean up df
birds=birds[,!(names(birds) %in% drops)]
birds[is.na(birds)]<-0
cols<-names(birds)
drops<-c("DIVERSITY","PLOT","VISIT")
sps<-cols[-c(1:3)]##this is a list of the names of the birds only
bird.sp<-birds[,sps]
spc_pres<-apply(bird.sp>0,2,sum)
View(spc_pres)
plot(sort(spc_pres),log='y',main="Cumulative Distribution of Species Occurrences",xlab='Cumulative Count of Species',ylab='Number of Plots')#cumulative plot of species(x) by plot(y)
hist(log(spc_pres),10)
tmp<-apply(bird.sp,2,sum)
spc_mean<-tmp/spc_pres #avg cover for each species
plot(sort(spc_mean),main="Cumulative Species Abundance Distribution",
xlab="Cumulative Number of Species", ylab="Mean Abundance")
##is the mean abun of sp correlated with # of plots occur in?
plot(spc_pres,spc_mean)
listsps<-identify(spc_pres,spc_mean,names(bird.sp))
plt_pres<-apply(bird.sp>0,1,sum)
plot(sort(plt_pres))
plt_sum<-apply(bird.sp,1,sum)
plot(sqrt(plt_sum))
plot(plt_pres,plt_sum)
mean(plt_pres)
plt.pres[plt_sum>100]
plt_pres[plt_sum>100]
plt_pres[plt_sum>3]
spc_dat<-list(spc_pres,spc_mean,plt_pres,plt_sum)
names(spc_dat) <- c("spc_pres","spc_mean","plt_pres","plt_sum")
abuocc(bird.sp)
library("labdsv")
abuocc(bird.sp)
N
setwd("/Users/colleennell/Documents/R/enemies")
birds<-read.csv("enemy_bird_visit.csv")
sp.list<-read.csv("enemy_bird_list.csv")
#functions
std <- function(x) sd(x)/sqrt(length(x))
##clean data
drops<-c("Grand.Total","X.blank.")##clean up df
birds=birds[,!(names(birds) %in% drops)]
birds[is.na(birds)]<-0
cols<-names(birds)
drops<-c("DIVERSITY","PLOT","VISIT")
sps<-cols[-c(1:3)]##this is a list of the names of the birds only
birds$VISIT<-as.character(birds$VISIT)
birds$total_abun<-rowSums(birds[,sps])
bird.plot<-birds%>%
mutate(birds_plot_visit=rowSums(.[sps]))%>%
group_by(DIVERSITY,PLOT)%>%
summarize(total_birds_plot=sum(birds_plot_visit),
n_visit=length(VISIT),
mean_birds_visit=mean(birds_plot_visit),
se_birds_visit=std(birds_plot_visit),
birds_30=mean_birds_visit*3,
se_30=std(birds_plot_visit)*3)
library(dplyr)
bird.plot<-birds%>%
mutate(birds_plot_visit=rowSums(.[sps]))%>%
group_by(DIVERSITY,PLOT)%>%
summarize(total_birds_plot=sum(birds_plot_visit),
n_visit=length(VISIT),
mean_birds_visit=mean(birds_plot_visit),
se_birds_visit=std(birds_plot_visit),
birds_30=mean_birds_visit*3,
se_30=std(birds_plot_visit)*3)
View(bird.plot)
birds.melt<-melt(birds,id.vars=c("DIVERSITY","PLOT","VISIT","total_abun"),variable.name="ID")%>%
left_join(sp.list[,c("ID","feeding.guild","Family","Order")],by="ID")
library(reshape2)
birds.melt<-melt(birds,id.vars=c("DIVERSITY","PLOT","VISIT","total_abun"),variable.name="ID")%>%
left_join(sp.list[,c("ID","feeding.guild","Family","Order")],by="ID")
birds.melt.guild<-birds.melt%>%
group_by(DIVERSITY,feeding.guild,Family)%>%
summarize(obs=sum(value))
View(birds.melt.guild)
bird.div<-bird.plot%>%
group_by(DIVERSITY)%>%
summarize(bird_abun=sum(total_brds_plot))
bird.div<-bird.plot%>%
group_by(DIVERSITY)%>%
summarize(bird_abun=sum(total_birds_plot))
View(bird.div)
bird.div<-bird.plot%>%
group_by(DIVERSITY)%>%
summarize_each(funs(sum)))
bird.div<-bird.plot%>%
group_by(DIVERSITY)%>%
summarize_each(funs(sum))
View(bird.div)
birme<-melt(birds)
View(birme)
abuocc(bird.sp)##this does everythign above
